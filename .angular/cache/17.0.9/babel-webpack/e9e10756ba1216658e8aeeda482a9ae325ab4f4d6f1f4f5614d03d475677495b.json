{"ast":null,"code":"import _asyncToGenerator from \"E:/my-projects/Example_project/grocery-app/grocery-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nexport let VedioserviceService = /*#__PURE__*/(() => {\n  var _class;\n  class VedioserviceService {\n    constructor() {\n      this.videos = [];\n      this.VIDEOS_KEY = 'videos';\n      this.convertBlobToBase64 = blob => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.readAsDataURL(blob);\n      });\n    }\n    loadVideos() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const videoList = yield Preferences.get({\n          key: _this.VIDEOS_KEY\n        });\n        _this.videos = videoList.value ? JSON.parse(videoList.value) : [];\n        return _this.videos;\n      })();\n    }\n    storeVideo(blob) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const fileName = new Date().getTime() + '.mp4';\n        const base64Data = yield _this2.convertBlobToBase64(blob);\n        const savedFile = yield Filesystem.writeFile({\n          path: fileName,\n          data: base64Data,\n          directory: Directory.Data\n        });\n        _this2.videos.unshift(savedFile.uri);\n        return Preferences.set({\n          key: _this2.VIDEOS_KEY,\n          value: JSON.stringify(_this2.videos)\n        });\n      })();\n    }\n    getVideoUrl(fullPath) {\n      return _asyncToGenerator(function* () {\n        const path = fullPath.substr(fullPath.lastIndexOf('/') + 1);\n        const file = yield Filesystem.readFile({\n          path: path,\n          directory: Directory.Data\n        });\n        return `data:video/mp4;base64,${file.data}`;\n      })();\n    }\n  }\n  _class = VedioserviceService;\n  _class.ɵfac = function VedioserviceService_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return VedioserviceService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}